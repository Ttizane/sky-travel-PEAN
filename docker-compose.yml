version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: myapp-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks: [appnet]
    # Se vuoi collegarti da psql locale, sblocca la porta:
    # ports: ["5432:5432"]

  api:
    build:
      context: ./backend
    container_name: myapp-api
    environment:
      NODE_ENV: production
      PORT: 3000
      # Il nome host del DB è il service name "db" (stessa rete)
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    networks: [appnet]
    # Espongo per chiamare l’API anche fuori da nginx (opzionale)
    ports:
      - "${API_PORT}:3000"

  web:
    build:
      context: ./frontend
    container_name: myapp-web
    depends_on:
      api:
        condition: service_started
    networks: [appnet]
    ports:
      - "${WEB_PORT}:80"

networks:
  appnet:

volumes:
  pgdata:
